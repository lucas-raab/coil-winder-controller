<div id="Controls" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%">

<div id="Control" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="800" data-tchmi-height="640">
<div id="TcHmiTextblock_MainSettings_4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="32" data-tchmi-height-unit="px" data-tchmi-left="32" data-tchmi-left-unit="px" data-tchmi-text="%f%%l%L_Control%/l%%/f%" data-tchmi-top="18" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-right="16">
<script data-tchmi-target-attribute="data-tchmi-class-names" type="application/json">
      [
      "headline-2"
      ]
    </script>
  </div>
<div data-tchmi-grid-column-index="0" data-tchmi-grid-row-index="0" id="TcHmiContainer_MiscSettings_12" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height-unit="px" data-tchmi-left="32" data-tchmi-left-unit="px" data-tchmi-top="60" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right-unit="px" data-tchmi-right="32" data-tchmi-bottom="32">
<script data-tchmi-target-attribute="data-tchmi-class-names" type="application/json">
        [
        "background-container"
        ]
      </script>
<div id="TcHmiToggleButtonStart" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="85" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text="%i%start%/i%" data-tchmi-state-symbol="%s%PLC1.MAIN.FB_hmi_connection.startUI%/s%" data-tchmi-text-font-size="%i%buttonFontSize0%/i%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButtonStart.onStateChanged",
    "actions": [
      {
        "objectType": "SwitchCase",
        "active": true,
        "compare": {
          "objectType": "Symbol",
          "valueType": "tchmi:general#/definitions/BOOL",
          "symbolExpression": "%s%PLC1.MAIN.FB_hmi_connection.startUI%/s%"
        },
        "cases": [
          {
            "caseValue": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": true
            },
            "actions": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%start%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Stop"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "caseValue": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": false
            },
            "actions": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%start%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Start"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiToggleButtonReset" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="85" data-tchmi-height-unit="px" data-tchmi-left="330" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text="%i%reset%/i%" data-tchmi-state-symbol="%s%PLC1.MAIN.FB_hmi_connection.resetUI%/s%" data-tchmi-text-font-size="%i%buttonFontSize0%/i%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButtonReset.onStateChanged",
    "actions": [
      {
        "objectType": "SwitchCase",
        "active": true,
        "compare": {
          "objectType": "Symbol",
          "valueType": "tchmi:general#/definitions/BOOL",
          "symbolExpression": "%s%PLC1.MAIN.tensionUI%/s%"
        },
        "cases": [
          {
            "caseValue": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": true
            },
            "actions": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%Tension%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Stop Tension"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "caseValue": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": false
            },
            "actions": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%Tension%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Start Tension"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiToggleButtonHome" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="85" data-tchmi-height-unit="px" data-tchmi-left="490" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text="%i%Home%/i%" data-tchmi-state-symbol="%s%PLC1.MAIN.FB_hmi_connection.homeUI%/s%" data-tchmi-text-font-size="%i%buttonFontSize0%/i%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButtonHome.onStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%PLC1.MAIN.FB_hmi_connection.homeUI%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%Home%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Homing In Progress"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%Home%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Home"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>
</div>
<div id="TcHmiToggleButtonTension" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="85" data-tchmi-height-unit="px" data-tchmi-left="202" data-tchmi-left-unit="px" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text="%i%tension%/i%" data-tchmi-state-symbol="%s%PLC1.MAIN.FB_hmi_connection.tensionUI%/s%" data-tchmi-text-font-size="%i%buttonFontSize0%/i%">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButtonTension.onStateChanged",
    "actions": [
      {
        "objectType": "SwitchCase",
        "active": true,
        "compare": {
          "objectType": "Symbol",
          "valueType": "tchmi:general#/definitions/BOOL",
          "symbolExpression": "%s%PLC1.MAIN.FB_hmi_connection.tensionUI%/s%"
        },
        "cases": [
          {
            "caseValue": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": true
            },
            "actions": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%tension%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Stop Tension"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "caseValue": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": false
            },
            "actions": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%i%tension%/i%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Start Tension"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>